java_binary(
  name = "AddTwoNumbers",
  srcs = ["AddTwoNumbers.java"],
  deps = [":ListNode"]
)

java_binary(
  name = "BestTimeBuySellStock",
  srcs = ["BestTimeBuySellStock.java"],
  deps = [":TreeNode"]
)

java_binary(
  name = "BinaryTreeLevelOrderTraversal",
  srcs = ["BinaryTreeLevelOrderTraversal.java"],
  deps = [":TreeNode"]
)

java_binary(
  name = "BinaryTreeRightSideView",
  srcs = ["BinaryTreeRightSideView.java"],
  deps = [":TreeNode"]
)

java_binary(
  name = "BuildingsWithOceanView",
  srcs = ["BuildingsWithOceanView.java"],
)

java_binary(
  name = "ClimbingStairs",
  srcs = ["ClimbingStairs.java"],
)

java_binary(
  name = "CloneGraph",
  srcs = ["CloneGraph.java"],
  deps = [":Node"]
)

java_binary(
  name = "CombinationSum",
  srcs = ["CombinationSum.java"]
)

java_binary(
  name = "CombinationsOfPhoneNumber",
  srcs = ["CombinationsOfPhoneNumber.java"]
)

java_binary(
  name = "CoinChange",
  srcs = ["CoinChange.java"]
)

#java_binary(
#  name = "ConstructString",
#  srcs = ["ConstructString.java"]
#)

java_binary(
  name = "ContainerWithMostWater",
  srcs = ["ContainerWithMostWater.java"]
)

java_binary(
  name = "CourseSchedule",
  srcs = ["CourseSchedule.java"]
)

java_binary(
  name = "DesignTwitter",
  srcs = ["DesignTwitter.java"]
)

java_binary(
  name = "EditDistance",
  srcs = ["EditDistance.java"]
)

java_binary(
  name = "FindAllAnagramsInAString",
  srcs = ["FindAllAnagramsInAString.java"]
)

java_binary(
  name = "FindAllDisappearedInAnArray",
  srcs = ["FindAllDisappearedInAnArray.java"]
)

java_binary(
  name = "FindMedianOfStreams",
  srcs = ["FindMedianOfStreams.java"]
)

java_binary(
  name = "FindPivotIndex",
  srcs = ["FindPivotIndex.java"]
)

java_binary(
  name = "FizzBuzzMultiThreaded",
  srcs = ["FizzBuzzMultiThreaded.java"]
)

java_binary(
  name = "HouseRobber",
  srcs = ["HouseRobber.java"]
)

java_binary(
  name = "HouseRobberII",
  srcs = ["HouseRobberII.java"]
)

java_binary(
  name = "ImplementQueueUsingStacks",
  srcs = ["ImplementQueueUsingStacks.java"]
)

java_binary(
  name = "IsoMorphicStrings",
  srcs = ["IsoMorphicStrings.java"]
)

java_binary(
  name = "IsSubsequence",
  srcs = ["IsSubsequence.java"]
)

java_binary(
  name = "KthLargestElementInArray",
  srcs = ["KthLargestElementInArray.java"]
)

java_binary(
  name = "KthLargestInStream",
  srcs = ["KthLargestInStream.java"]
)

java_binary(
  name = "KClosestToOrigin",
  srcs = ["KClosestToOrigin.java"]
)

java_binary(
  name = "LastStoneWeight",
  srcs = ["LastStoneWeight.java"],
)

java_binary(
  name = "LinkedListCycleII",
  srcs = ["LinkedListCycleII.java"],
  deps = [":ListNode"]
)

java_binary(
  name = "LongestIncreasingSubsequence",
  srcs = ["LongestIncreasingSubsequence.java"]
)

java_binary(
  name = "LongestPalindrome",
  srcs = ["LongestPalindrome.java"]
)

java_binary(
  name = "LongestPalindromicSubstring",
  srcs = ["LongestPalindromicSubstring.java"]
)

java_binary(
  name = "LongestSubstringWithoutRepeating",
  srcs = ["LongestSubstringWithoutRepeating.java"]
)

java_binary(
  name = "LowestCommonAncestor",
  srcs = ["LowestCommonAncestor.java"],
  deps = [":TreeNode"]
)

java_binary(
  name = "MatrixDistanceToClosestZero",
  srcs = ["MatrixDistanceToClosestZero.java"]
)

java_binary(
  name = "MaxConsecutiveOnes",
  srcs = ["MaxConsecutiveOnes.java"]
)

java_binary(
  name = "MaximumProductSubarray",
  srcs = ["MaximumProductSubarray.java"]
)

java_binary(
  name = "MaximumProfitJobScheduling",
  srcs = ["MaximumProfitJobScheduling.java"]
)

java_binary(
  name = "MaximumSubarray",
  srcs = ["MaximumSubarray.java"]
)

java_binary(
  name = "MergeIntervals",
  srcs = ["MergeIntervals.java"],
)

java_binary(
  name = "MergeKSortedLists",
  srcs = ["MergeKSortedLists.java"],
  deps = [":ListNode"]
)

java_binary(
  name = "MergeTwoSortedLists",
  srcs = ["MergeTwoSortedLists.java"],
  deps = [":ListNode"]
)

java_binary(
  name = "MinCostClimbingStairs",
  srcs = ["MinCostClimbingStairs.java"]
)

java_binary(
  name = "MinimumSizeSubarraySum",
  srcs = ["MinimumSizeSubarraySum.java"]
)

java_binary(
  name = "MinStack",
  srcs = ["MinStack.java"]
)

java_binary(
  name = "MiddleOfLinkedList",
  srcs = ["MiddleOfLinkedList.java"],
  deps = [":ListNode"]
)

java_binary(
  name = "NaryTreePreorderTraversal",
  srcs = ["NaryTreePreorderTraversal.java"],
)

java_binary(
  name = "NumberOfIslands",
  srcs = ["NumberOfIslands.java"],
)

java_binary(
  name = "NumberOfOneBits",
  srcs = ["NumberOfOneBits.java"],
)

java_binary(
  name = "PalindromicSubstring",
  srcs = ["PalindromicSubstring.java"],
)

java_binary(
  name = "Permutations",
  srcs = ["Permutations.java"],
)

java_binary(
  name = "PrintFooBarAlternately",
  srcs = ["PrintFooBarAlternately.java"]
)

java_binary(
  name = "PrintInOrder",
  srcs = ["PrintInOrder.java"]
)

java_binary(
  name = "RandomPickWithWeight",
  srcs = ["RandomPickWithWeight.java"],
)

java_binary(
  name = "ReversePolishNotation",
  srcs = ["ReversePolishNotation.java"],
)

java_binary(
  name = "RomanNumeralToInt",
  srcs = ["RomanNumeralToInt.java"],
)

java_binary(
  name = "ReverseLinkedList",
  srcs = ["ReverseLinkedList.java"],
  deps = [":ListNode"]
)

java_binary(
  name = "ReverseLinkedListII",
  srcs = ["ReverseLinkedListII.java"],
  deps = [":ListNode"]
)

java_binary(
  name = "RottingOranges",
  srcs = ["RottingOranges.java"],
)

java_binary(
  name = "SameTree",
  srcs = ["SameTree.java"],
  deps = [":TreeNode"],
)

java_binary(
  name = "ScheduleOrder",
  srcs = ["ScheduleOrder.java"]
)

java_binary(
  name = "SearchInRotatedSortedArray",
  srcs = ["SearchInRotatedSortedArray.java"]
)

java_binary(
  name = "SerializeAndDeserializeBinaryTree",
  srcs = ["SerializeAndDeserializeBinaryTree.java"],
  deps = ["TreeNode"]
)

java_binary(
  name = "SimplifyPath",
  srcs = ["SimplifyPath.java"]
)

java_binary(
  name = "SingleNumber",
  srcs = ["SingleNumber.java"]
)

java_binary(
  name = "SortColors",
  srcs = ["SortColors.java"]
)

java_binary(
  name = "SpiralMatrix",
  srcs = ["SpiralMatrix.java"]
)

java_binary(
  name = "SpiralMatrixII",
  srcs = ["SpiralMatrixII.java"]
)

java_binary(
  name = "StringToIntegerAtoi",
  srcs = ["StringToIntegerAtoi.java"]
)

java_binary(
  name = "Subsets",
  srcs = ["Subsets.java"]
)

java_binary(
  name = "SubsetsII",
  srcs = ["SubsetsII.java"]
)

java_binary(
  name = "TokenBucketRateLimiter",
  srcs = ["TokenBucketRateLimiter.java"]
)

java_binary(
  name = "ThreeSum",
  srcs = ["ThreeSum.java"]
)

java_binary(
  name = "WildCardMatching",
  srcs = ["WildCardMatching.java"]
)

java_binary(
  name = "WordBreak",
  srcs = ["WordBreak.java"]
)

java_binary(
  name = "WordLadder",
  srcs = ["WordLadder.java"],
  deps = [":Pair"]
)

java_binary(
  name = "WordSearch",
  srcs = ["WordSearch.java"],
)

java_library(
  name = "ListNode",
  srcs = ["ListNode.java"]
)

java_library(
  name = "Node",
  srcs = ["Node.java"]
)

java_library(
  name = "Pair",
  srcs = ["Pair.java"]
)

java_library(
  name = "ProductOfArrayExceptSelf",
  srcs = ["ProductOfArrayExceptSelf.java"]
)

java_library(
  name = "TaskScheduler",
  srcs = ["TaskScheduler.java"]
)

java_library(
  name = "TrappingRainWater",
  srcs = ["TrappingRainWater.java"]
)

java_library(
  name = "TreeNode",
  srcs = ["TreeNode.java"]
)

java_library(
  name = "Trie",
  srcs = ["Trie.java"]
)

java_library(
  name = "TwoSum",
  srcs = ["TwoSum.java"]
)

java_library(
  name = "ValidParentheses",
  srcs = ["ValidParentheses.java"]
)

java_library(
  name = "ValidSudoku",
  srcs = ["ValidSudoku.java"]
)

